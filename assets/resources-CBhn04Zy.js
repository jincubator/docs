import{f as r,j as e}from"./index-BZW_0xgh.js";const t={title:"Resource Management",description:"undefined"};function n(i){const s={a:"a",blockquote:"blockquote",code:"code",div:"div",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...r(),...i.components};return e.jsxs(e.Fragment,{children:[e.jsx(s.header,{children:e.jsxs(s.h1,{id:"resource-management",children:["Resource Management",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#resource-management",children:e.jsx(s.div,{"data-autolink-icon":!0})})]})}),`
`,e.jsxs(s.h2,{id:"overview",children:["Overview",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#overview",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(s.p,{children:["The Protocol leverages an expansive locking system from ",e.jsx(s.a,{href:"https://github.com/jincubator/the-compact/",children:"the-compact"}),". We have incorporated ",e.jsx(s.a,{href:"/protocol",children:"Mandates and Solver Payloads"})," to allow Intents to be solved on a single chain without provisioning up front capital as we arbiters can confirm mandates have been met by solvers at execution time, thus solvers may use the swappers locked funds for execution."]}),`
`,e.jsxs(s.blockquote,{children:[`
`,e.jsxs(s.p,{children:["As of July 25th the ",e.jsx(s.a,{href:"https://github.com/jincubator/the-compact/",children:"the-compact"})," we are developing on has been forked from ",e.jsx(s.a,{href:"https://github.com/Uniswap/the-compact/tree/v1",children:"Uniswap the-compact"})," v1 branch which has not as yet been deployed."]}),`
`]}),`
`,e.jsxs(s.h2,{id:"summary",children:["Summary",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#summary",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(s.p,{children:["The Compact is an ownerless ERC6909 contract that facilitates the voluntary formation and mediation of reusable ",e.jsx(s.strong,{children:"resource locks"}),". It enables tokens to be credibly committed to be spent in exchange for performing actions across arbitrary, asynchronous environments, and claimed once the specified conditions have been met."]}),`
`,e.jsxs(s.p,{children:["Resource locks are entered into by ERC20 or native token holders (called the ",e.jsx(s.strong,{children:"depositor"}),"). Once a resource lock has been established, the owner of the ERC6909 token representing a resource lock can act as a ",e.jsx(s.strong,{children:"sponsor"})," and create a ",e.jsx(s.strong,{children:"compact"}),". A compact is a commitment allowing interested parties to claim their tokens through the sponsor's indicated ",e.jsx(s.strong,{children:"arbiter"}),". The arbiter is then responsible for processing the claim once it has attested to the specified conditions of the compact having been met."]}),`
`,e.jsxs(s.p,{children:["When depositing into a resource lock, the depositor assigns an ",e.jsx(s.strong,{children:"allocator"})," and a ",e.jsx(s.strong,{children:"reset period"})," for that lock. The allocator is tasked with providing additional authorization whenever the owner of the lock wishes to transfer their 6909 tokens, withdraw the underlying locked assets, or sponsor a compact utilizing the lock. Their primary role is essentially to protect ",e.jsx(s.strong,{children:"claimants"}),'—entities that provide proof of having met the conditions and subsequently make a claim against a compact—by ensuring the credibility of commitments, such as preventing "double-spends" involving previously-committed locked balances.']}),`
`,e.jsxs(s.p,{children:["Allocators can be purely onchain abstractions, or can involve hybrid (onchain + offchain) mechanics as part of their authorization procedure. Should an allocator erroneously or maliciously fail to authorize the use of an unallocated resource lock balance, the depositor can initiate a ",e.jsx(s.strong,{children:"forced withdrawal"})," for the lock in question; after waiting for the reset period indicated when depositing into the lock, they can withdraw their underlying balance at will ",e.jsx(s.em,{children:"without"})," the allocator's explicit permission."]}),`
`,e.jsxs(s.p,{children:["Sponsors can also optionally assign an ",e.jsx(s.strong,{children:"emissary"})," to act as a fallback signer for authorizing claims against their compacts. This is particularly helpful for smart contract accounts or other scenarios where signing keys might change."]}),`
`,e.jsx(s.p,{children:'The Compact effectively "activates" any deposited tokens to be instantly spent or swapped across arbitrary, asynchronous environments as long as:'}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsx(s.li,{children:"Claimants are confident that the allocator is sound and will not leave the resource lock underallocated."}),`
`,e.jsx(s.li,{children:"Sponsors are confident that the allocator will not unduly censor fully allocated requests."}),`
`,e.jsx(s.li,{children:"Sponsors are confident that the arbiter is sound and will not process claims where the conditions were not successfully met."}),`
`,e.jsxs(s.li,{children:["Claimants are confident that the arbiter is sound and will not ",e.jsx(s.em,{children:"fail"})," to process claims where the conditions ",e.jsx(s.em,{children:"were"})," successfully met."]}),`
`]}),`
`,e.jsxs(s.h2,{id:"key-concepts",children:["Key Concepts",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#key-concepts",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(s.h3,{id:"resource-locks",children:["Resource Locks",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#resource-locks",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(s.p,{children:"Resource locks are the fundamental building blocks of The Compact protocol. They are created when a depositor places tokens (either native tokens or ERC20 tokens) into The Compact. Each resource lock has four key properties:"}),`
`,e.jsxs(s.ol,{children:[`
`,e.jsxs(s.li,{children:["The ",e.jsx(s.strong,{children:"underlying token"})," held in the resource lock."]}),`
`,e.jsxs(s.li,{children:["The ",e.jsx(s.strong,{children:"allocator"})," tasked with cosigning on claims against the resource locks (see ",e.jsx(s.a,{href:"#allocators",children:"Allocators"}),")."]}),`
`,e.jsxs(s.li,{children:["The ",e.jsx(s.strong,{children:"scope"})," of the resource lock (either spendable on any chain or limited to a single chain)."]}),`
`,e.jsxs(s.li,{children:["The ",e.jsx(s.strong,{children:"reset period"})," for forcibly exiting the lock (see ",e.jsx(s.a,{href:"#forced-withdrawals",children:"Forced Withdrawals"}),") and for emissary reassignment timelocks (see ",e.jsx(s.a,{href:"#emissaries",children:"Emissaries"}),")."]}),`
`]}),`
`,e.jsx(s.p,{children:"Each unique combination of these four properties is represented by a fungible ERC6909 tokenID. The owner of these ERC6909 tokens can act as a sponsor and create compacts."}),`
`,e.jsxs(s.p,{children:["The ",e.jsx(s.code,{children:"scope"}),", ",e.jsx(s.code,{children:"resetPeriod"}),", and the ",e.jsx(s.code,{children:"allocatorId"})," (obtained when an allocator is registered) are packed into a ",e.jsx(s.code,{children:"bytes12 lockTag"}),". A resource lock's specific ID (the ERC6909 ",e.jsx(s.code,{children:"tokenId"}),") is a concatenation of this ",e.jsx(s.code,{children:"lockTag"})," and the underlying ",e.jsx(s.code,{children:"token"})," address, represented as a ",e.jsx(s.code,{children:"uint256"})," for ERC6909 compatibility. This ",e.jsx(s.code,{children:"lockTag"})," is used throughout various interfaces to succinctly identify the parameters of a lock."]}),`
`,e.jsx(s.strong,{children:"Fee-on-Transfer and Rebasing Token Handling:"}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Fee-on-Transfer:"})," The Compact correctly handles fee-on-transfer tokens for both deposits and withdrawals. The amount of ERC6909 tokens minted or burned is based on the ",e.jsx(s.em,{children:"actual balance change"})," in The Compact contract, not just the specified amount. This ensures ERC6909 tokens accurately represent the underlying assets."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Rebasing Tokens:"})," ",e.jsx(s.strong,{children:"Rebasing tokens (e.g., stETH) are NOT supported in The Compact V1."})," Any yield or other balance changes occurring ",e.jsx(s.em,{children:"after"})," deposit will not accrue to the depositor's ERC6909 tokens. For such assets, use their wrapped, non-rebasing counterparts (e.g., wstETH) to avoid loss of value."]}),`
`]}),`
`,e.jsxs(s.h3,{id:"allocators",children:["Allocators",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#allocators",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(s.p,{children:["Each resource lock is mediated by an ",e.jsx(s.strong,{children:"allocator"}),". Their primary responsibilities include:"]}),`
`,e.jsxs(s.ol,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Preventing Double-Spending:"})," Ensuring sponsors don't commit the same tokens to multiple compacts or transfer away committed funds."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Validating Transfers:"})," Attesting to standard ERC6909 transfers of resource lock tokens (via ",e.jsx(s.code,{children:"IAllocator.attest"}),")."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Authorizing Claims:"})," Validating claims against resource locks (via ",e.jsx(s.code,{children:"IAllocator.authorizeClaim"}),")."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Nonce Management:"})," Ensuring nonces are not reused for claims and (optionally) consuming nonces directly on The Compact using ",e.jsx(s.code,{children:"consume"}),"."]}),`
`]}),`
`,e.jsxs(s.p,{children:["Allocators must be registered with The Compact via ",e.jsx(s.code,{children:"__registerAllocator"})," before they can be assigned to locks. They must implement the ",e.jsx(s.code,{children:"IAllocator"})," interface and operate under specific ",e.jsx(s.a,{href:"#trust-assumptions",children:"trust assumptions"}),"."]}),`
`,e.jsxs(s.h3,{id:"arbiters",children:["Arbiters",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#arbiters",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(s.p,{children:"Arbiters are responsible for verifying and submitting claims. When a sponsor creates a compact, they designate an arbiter who will:"}),`
`,e.jsxs(s.ol,{children:[`
`,e.jsx(s.li,{children:"Verify that the specified conditions of the compact have been met (these conditions can be implicitly understood or explicitly defined via witness data)."}),`
`,e.jsxs(s.li,{children:["Process the claim by calling the appropriate function on The Compact (from ",e.jsx(s.code,{children:"ITheCompactClaims"}),")."]}),`
`,e.jsx(s.li,{children:"Specify which claimants are entitled to the committed resources and in what form each claimant's portion will be issued (i.e., direct transfer, withdrawal, or conversion) as part of the claim payload."}),`
`]}),`
`,e.jsxs(s.p,{children:["Often, the entity fulfilling an off-chain condition (like a filler or solver) might interface directly with the arbiter. The ",e.jsx(s.a,{href:"#trust-assumptions",children:"trust assumptions"})," around arbiters are critical to understand."]}),`
`,e.jsxs(s.h3,{id:"emissaries",children:["Emissaries",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#emissaries",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(s.p,{children:"Emissaries provide a fallback verification mechanism for sponsors when authorizing claims. This is particularly useful for:"}),`
`,e.jsxs(s.ol,{children:[`
`,e.jsx(s.li,{children:"Smart contract accounts that might update their EIP-1271 signature verification logic."}),`
`,e.jsx(s.li,{children:"Accounts using EIP-7702 delegation that leverages EIP-1271."}),`
`,e.jsx(s.li,{children:"Situations where the sponsor wants to delegate claim verification to a trusted third party."}),`
`]}),`
`,e.jsxs(s.p,{children:["A sponsor assigns an emissary for a specific ",e.jsx(s.code,{children:"lockTag"})," using ",e.jsx(s.code,{children:"assignEmissary"}),". The emissary must implement the ",e.jsx(s.code,{children:"IEmissary"})," interface, specifically the ",e.jsx(s.code,{children:"verifyClaim"})," function."]}),`
`,e.jsxs(s.p,{children:["To change an emissary after one has been assigned, the sponsor must first call ",e.jsx(s.code,{children:"scheduleEmissaryAssignment"}),", wait for the ",e.jsx(s.code,{children:"resetPeriod"})," associated with the ",e.jsx(s.code,{children:"lockTag"})," to elapse, and then call ",e.jsx(s.code,{children:"assignEmissary"})," again with the new emissary's address (or ",e.jsx(s.code,{children:"address(0)"})," to remove)."]}),`
`,e.jsxs(s.h3,{id:"compacts--eip-712-payloads",children:["Compacts & EIP-712 Payloads",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#compacts--eip-712-payloads",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(s.p,{children:["A ",e.jsx(s.strong,{children:"compact"})," is the agreement created by a sponsor that allows their locked resources to be claimed under specified conditions. The Compact protocol uses EIP-712 typed structured data for creating and verifying signatures for these agreements."]}),`
`,e.jsx(s.p,{children:"There are three main EIP-712 payload types a sponsor can sign:"}),`
`,e.jsxs(s.ol,{children:[`
`,e.jsxs(s.li,{children:[`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:e.jsx(s.code,{children:"Compact"})}),": For single resource lock operations on a single chain."]}),`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(s.code,{children:[e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Defined in src/types/EIP712Types.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" Compact"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" arbiter;    "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The account tasked with verifying and submitting the claim."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" sponsor;    "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The account to source the tokens from."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" nonce;      "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// A parameter to enforce replay protection, scoped to allocator."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" expires;    "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The time at which the claim expires."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    bytes12"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" lockTag;    "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// A tag representing the allocator, reset period, and scope."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" token;      "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The locked token, or address(0) for native tokens."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" amount;     "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The amount of ERC6909 tokens to commit from the lock."})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"    // (Optional) Witness data may follow:"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"    // Mandate mandate;"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})})]})})}),`
`]}),`
`,e.jsxs(s.li,{children:[`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:e.jsx(s.code,{children:"BatchCompact"})}),": For allocating multiple resource locks on a single chain."]}),`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(s.code,{children:[e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Defined in src/types/EIP712Types.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" BatchCompact"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" arbiter;            "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The account tasked with verifying and submitting the claim."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" sponsor;            "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The account to source the tokens from."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" nonce;              "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// A parameter to enforce replay protection, scoped to allocator."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" expires;            "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The time at which the claim expires."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"    Lock[] commitments;         "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The committed locks with lock tags, tokens, & amounts."})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"    // (Optional) Witness data may follow:"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"    // Mandate mandate;"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})}),`
`,e.jsx(s.span,{className:"line","data-empty-line":!0,children:" "}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" Lock"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    bytes12"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" lockTag;    "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// A tag representing the allocator, reset period, and scope."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" token;      "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The locked token, or address(0) for native tokens."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" amount;     "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The maximum committed amount of tokens."})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})})]})})}),`
`]}),`
`,e.jsxs(s.li,{children:[`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:e.jsx(s.code,{children:"MultichainCompact"})}),": For allocating one or more resource locks across multiple chains."]}),`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(s.code,{children:[e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Defined in src/types/EIP712Types.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" MultichainCompact"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" sponsor; "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The account to source the tokens from."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" nonce; "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// A parameter to enforce replay protection, scoped to allocator."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" expires; "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The time at which the claim expires."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"Element[] elements; "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Arbiter, chainId, commitments, and mandate for each chain."})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})}),`
`,e.jsx(s.span,{className:"line","data-empty-line":!0,children:" "}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"    // Defined in src/types/EIP712Types.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"    struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" Element"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"        address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" arbiter;            "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The account tasked with verifying and submitting the claim."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"        uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" chainId;            "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The chainId where the tokens are located."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"        Lock[] commitments;         "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The committed locks with lock tags, tokens, & amounts."})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"        // Witness data MUST follow (mandatory for multichain compacts):"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"        Mandate mandate;"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"    }"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"    ```"})}),`
`,e.jsx(s.span,{className:"line","data-empty-line":!0,children:" "}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"The `Mandate` "}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" within"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" these payloads is "}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"for"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" [Witness Structure](#witness"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"-"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"structure). The EIP"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"-"}),e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"712"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" typehash "}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"for"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" these structures is constructed dynamically; empty `Mandate` structs result in a typestring without witness data. Witness data is optional _except_ in a `MultichainCompact`; a multichain compact's elements "}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"**"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"must"}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"**"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" include a witness."})]})]})})}),`
`]}),`
`]}),`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Permit2 Integration Payloads:"}),`
The Compact also supports integration with Permit2 for gasless deposits, using additional EIP-712 structures for witness data within Permit2 messages:`]}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"CompactDeposit(bytes12 lockTag,address recipient)"}),": For basic Permit2 deposits."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"Activation(address activator,uint256 id,Compact compact)Compact(...)Mandate(...)"}),": Combines deposits with single compact registration."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"BatchActivation(address activator,uint256[] ids,Compact compact)Compact(...)Mandate(...)"}),": Combines deposits with batch compact registration."]}),`
`]}),`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"CompactCategory Enum:"}),`
The Compact introduces a `,e.jsx(s.code,{children:"CompactCategory"})," enum to distinguish between different types of compacts when using Permit2 integration:"]}),`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(s.code,{children:[e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Defined in src/types/CompactCategory.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"enum"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" CompactCategory"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    Compact"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:","})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    BatchCompact"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:","})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    MultichainCompact"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})})]})})}),`
`,e.jsxs(s.h3,{id:"witness-structure",children:["Witness Structure",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#witness-structure",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(s.p,{children:["The witness mechanism (",e.jsx(s.code,{children:"Mandate"})," struct) allows extending compacts with additional data for specifying conditions or parameters for a claim. The Compact protocol itself doesn't interpret the ",e.jsx(s.code,{children:"Mandate"}),"'s content; this is the responsibility of the arbiter. However, The Compact uses the hash of the witness data and its reconstructed EIP-712 typestring to derive the final claim hash for validation."]}),`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Format:"}),`
The witness is always a `,e.jsx(s.code,{children:"Mandate"})," struct appended to the compact."]}),`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(s.code,{children:e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#DCBDFB"},children:"Compact"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"(..., Mandate mandate)"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#DCBDFB"},children:"Mandate"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"("}),e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" myArg, "}),e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"bytes32"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" otherArg)"})]})})})}),`
`,e.jsxs(s.p,{children:["The ",e.jsx(s.code,{children:"witnessTypestring"})," provided during a claim should be the arguments ",e.jsx(s.em,{children:"inside"})," the ",e.jsx(s.code,{children:"Mandate"})," struct (e.g., ",e.jsx(s.code,{children:"uint256 myArg,bytes32 otherArg"}),"), followed by any nested structs. Note that there are no assumptions made by the protocol about the shape of the ",e.jsx(s.code,{children:"Mandate"})," or any nested structs within it."]}),`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Nested Structs:"}),`
EIP-712 requires nested structs to be ordered alphanumerically after the top-level struct in the typestring. We recommend prefixing nested structs with "Mandate" (e.g., `,e.jsx(s.code,{children:"MandateCondition"}),") to ensure correct ordering. Failure to do so will result in an ",e.jsx(s.em,{children:"invalid"})," EIP-712 typestring."]}),`
`,e.jsxs(s.p,{children:["For example, the correct witness typestring for ",e.jsx(s.code,{children:"Mandate(MandateCondition condition,uint256 arg)MandateCondition(bool flag,uint256 val)"})," would be ",e.jsx(s.code,{children:"MandateCondition condition,uint256 arg)MandateCondition(bool flag,uint256 val"})," (",e.jsx(s.em,{children:"without"})," a closing parenthesis)."]}),`
`,e.jsxs(s.blockquote,{children:[`
`,e.jsxs(s.p,{children:["☝️ Note the missing closing parenthesis in the above example. It will be added by the protocol during the dynamic typestring construction, so ",e.jsx(s.strong,{children:"do not include the closing parenthesis in your witness typestring."})," This is crucial, otherwise the generated typestring ",e.jsx(s.em,{children:"will be invalid"}),"."]}),`
`]}),`
`,e.jsxs(s.h3,{id:"registration",children:["Registration",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#registration",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(s.p,{children:["As an alternative to sponsors signing EIP-712 payloads, compacts can be ",e.jsx(s.em,{children:"registered"})," directly on The Compact contract. This involves submitting a ",e.jsx(s.code,{children:"claimHash"})," (derived from the intended compact details) and its ",e.jsx(s.code,{children:"typehash"}),`.
This supports:`]}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsx(s.li,{children:"Sponsors without direct signing capabilities (e.g., DAOs, protocols)."}),`
`,e.jsx(s.li,{children:"Smart wallet / EIP-7702 enabled sponsors with alternative signature logic."}),`
`,e.jsx(s.li,{children:"Chained deposit-and-register operations."}),`
`]}),`
`,e.jsxs(s.p,{children:["Registration can be done by the sponsor or a third party (if they provide the sponsor's signature for ",e.jsx(s.code,{children:"registerFor"})," type functions, or if they are providing the deposited tokens). Registrations do not expire, and registered compacts cannot be unregistered by the sponsor. Registrations can be invalidated by the allocator consuming the nonce, or by letting them expire. Once a claim is processed for a compact its registration state is cleared."]}),`
`,e.jsxs(s.p,{children:["The current registration status for a given claim can be queried via the ",e.jsx(s.code,{children:"ITheCompact.isRegistered"})," function:"]}),`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsx(s.code,{children:e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"bool"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" isRegistered "}),e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"="}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" theCompact."}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#DCBDFB"},children:"isRegistered"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"(sponsor, claimHash, typehash);"})]})})})}),`
`,e.jsxs(s.h3,{id:"claimant-processing--structure",children:["Claimant Processing & Structure",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#claimant-processing--structure",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(s.p,{children:["When an arbiter submits a claim, they provide an array of ",e.jsx(s.code,{children:"Component"})," structs. Each ",e.jsx(s.code,{children:"Component"})," specifies an ",e.jsx(s.code,{children:"amount"})," and a ",e.jsx(s.code,{children:"claimant"}),"."]}),`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(s.code,{children:[e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Defined in src/types/Components.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" Component"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" claimant; "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The lockTag + recipient of the transfer or withdrawal."})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" amount;   "}),e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// The amount of tokens to transfer or withdraw."})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})})]})})}),`
`,e.jsxs(s.p,{children:["The ",e.jsx(s.code,{children:"claimant"})," field encodes both the ",e.jsx(s.code,{children:"recipient"})," address (lower 160 bits) and a ",e.jsx(s.code,{children:"bytes12 lockTag"})," (upper 96 bits): ",e.jsx(s.code,{children:"claimant = (lockTag << 160) | recipient"}),"."]}),`
`,e.jsx(s.p,{children:"This encoding determines how The Compact processes each component of the claim:"}),`
`,e.jsxs(s.ol,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Direct ERC6909 Transfer:"})," If the encoded ",e.jsx(s.code,{children:"lockTag"})," matches the ",e.jsx(s.code,{children:"lockTag"})," of the resource lock being claimed, the ",e.jsx(s.code,{children:"amount"})," of ERC6909 tokens is transferred directly to the ",e.jsx(s.code,{children:"recipient"}),"."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Convert Between Resource Locks:"})," If the encoded ",e.jsx(s.code,{children:"lockTag"})," is non-zero and ",e.jsx(s.em,{children:"different"})," from the claimed lock's tag, The Compact attempts to ",e.jsx(s.em,{children:"convert"})," the claimed resource lock to a new one defined by the encoded ",e.jsx(s.code,{children:"lockTag"})," for the ",e.jsx(s.code,{children:"recipient"}),". This allows changing allocator, reset period, or scope."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Withdraw Underlying Tokens:"})," If the encoded ",e.jsx(s.code,{children:"lockTag"})," is ",e.jsx(s.code,{children:"bytes12(0)"}),", The Compact attempts to withdraw the underlying tokens (native or ERC20) from the resource lock and send them to the ",e.jsx(s.code,{children:"recipient"}),"."]}),`
`]}),`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Withdrawal Fallback Mechanism:"}),`
To prevent griefing (e.g., via malicious receive hooks during withdrawals, or relayed claims that intentionally underpay the necessary amount of gas), The Compact first attempts withdrawals with half the available gas. If this fails (and sufficient gas remains above a benchmarked stipend), it falls back to a direct ERC6909 transfer to the recipient. Stipends can be queried via `,e.jsx(s.code,{children:"getRequiredWithdrawalFallbackStipends"}),". Benchmarking for these stipends is done via a call to ",e.jsx(s.code,{children:"__benchmark"})," post-deployment, which meters cold account access and typical ERC20 and native transfers. This benchmark can be re-run by anyone at any time."]}),`
`,e.jsxs(s.h3,{id:"forced-withdrawals",children:["Forced Withdrawals",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#forced-withdrawals",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(s.p,{children:"This mechanism provides sponsors recourse if an allocator becomes unresponsive or censors requests."}),`
`,e.jsxs(s.ol,{children:[`
`,e.jsxs(s.li,{children:[`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Enable:"})," Sponsor calls ",e.jsx(s.code,{children:"enableForcedWithdrawal(uint256 id)"}),"."]}),`
`]}),`
`,e.jsxs(s.li,{children:[`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Wait:"})," The ",e.jsx(s.code,{children:"resetPeriod"})," for that resource lock must elapse."]}),`
`]}),`
`,e.jsxs(s.li,{children:[`
`,e.jsxs(s.p,{children:[e.jsx(s.strong,{children:"Withdraw:"})," Sponsor calls ",e.jsx(s.code,{children:"forcedWithdrawal(uint256 id, address recipient, uint256 amount)"})," to retrieve the underlying tokens."]}),`
`]}),`
`]}),`
`,e.jsxs(s.p,{children:["The forced withdrawal state can be reversed with ",e.jsx(s.code,{children:"disableForcedWithdrawal(uint256 id)"}),"."]}),`
`,e.jsxs(s.h3,{id:"signature-verification",children:["Signature Verification",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#signature-verification",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(s.p,{children:"When a claim is submitted for a non-registered compact (i.e., one relying on a sponsor's signature), The Compact verifies the sponsor's authorization in the following order:"}),`
`,e.jsxs(s.ol,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Caller is Sponsor:"})," If ",e.jsx(s.code,{children:"msg.sender == sponsor"}),", authorization is granted."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"ECDSA Signature:"})," Attempt standard ECDSA signature verification."]}),`
`,e.jsxs(s.li,{children:[e.jsxs(s.strong,{children:["EIP-1271 ",e.jsx(s.code,{children:"isValidSignature"}),":"]})," If ECDSA fails, call ",e.jsx(s.code,{children:"isValidSignature"})," on the sponsor's address (if it's a contract) with half the remaining gas."]}),`
`,e.jsxs(s.li,{children:[e.jsxs(s.strong,{children:["Emissary ",e.jsx(s.code,{children:"verifyClaim"}),":"]})," If EIP-1271 fails or isn't applicable, and an emissary is assigned for the sponsor and ",e.jsx(s.code,{children:"lockTag"}),", call the emissary's ",e.jsx(s.code,{children:"verifyClaim"})," function."]}),`
`]}),`
`,e.jsx(s.p,{children:"Sponsors cannot unilaterally cancel a signed compact; only allocators can effectively do so by consuming the nonce. This is vital to upholding the equivocation guarantees for claimants."}),`
`,e.jsxs(s.h2,{id:"trust-assumptions",children:["Trust Assumptions",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#trust-assumptions",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(s.p,{children:"The Compact protocol operates under a specific trust model where different actors have varying levels of trust requirements:"}),`
`,e.jsx(s.strong,{children:"Sponsor Trust Requirements:"}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Allocators"}),": Sponsors must trust that allocators will not unduly censor valid requests against fully funded locks. However, sponsors retain the ability to initiate forced withdrawals if allocators become unresponsive."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Arbiters"}),": Sponsors must trust that arbiters will not process claims where the specified conditions were not met. Arbiters have significant power in determining claim validity."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Emissaries"}),": Sponsors must trust that emissaries (if assigned) will not authorize claims maliciously, as emissaries can act as fallback signers when other verification methods fail. Emissaries effectively have the same authorization power as the sponsor for claim verification."]}),`
`]}),`
`,e.jsx(s.strong,{children:"Claimant Trust Requirements:"}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Allocators"}),": Claimants must trust that allocators are sound and will not allow resource locks to become underfunded through double-spending or other allocation failures."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Arbiters"}),": Claimants must trust that arbiters will not fail to process claims where conditions were properly met."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.strong,{children:"Emissaries"}),': Claimants must trust that emissaries (if assigned) will faithfully authorize valid claims if the sponsor is able to equivocate, or update their account to revoke their authorization on a previously authorized compact (as is the case with EIP-7702 sponsors and many smart contracts implementing EIP-1271). Therefore, claimants should require the use of one of a small set of known, "canonical" emissaries that enforce delays before allowing key rotation.']}),`
`]}),`
`,e.jsxs(s.h2,{id:"key-events",children:["Key Events",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#key-events",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(s.p,{children:"The Compact emits several events to signal important state changes:"}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"Claim(address indexed sponsor, address indexed allocator, address indexed arbiter, bytes32 claimHash, uint256 nonce)"}),": Emitted when a claim is successfully processed via ",e.jsx(s.code,{children:"ITheCompactClaims"})," functions."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"NonceConsumedDirectly(address indexed allocator, uint256 nonce)"}),": Emitted when an allocator directly consumes a nonce via ",e.jsx(s.code,{children:"consume"}),"."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"ForcedWithdrawalStatusUpdated(address indexed account, uint256 indexed id, bool activating, uint256 withdrawableAt)"}),": Emitted when ",e.jsx(s.code,{children:"enableForcedWithdrawal"})," or ",e.jsx(s.code,{children:"disableForcedWithdrawal"})," is called."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"CompactRegistered(address indexed sponsor, bytes32 claimHash, bytes32 typehash)"}),": Emitted when a compact is registered via ",e.jsx(s.code,{children:"register"}),", ",e.jsx(s.code,{children:"registerMultiple"}),", or combined deposit-and-register functions."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"AllocatorRegistered(uint96 allocatorId, address allocator)"}),": Emitted when a new allocator is registered via ",e.jsx(s.code,{children:"__registerAllocator"}),"."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"EmissaryAssigned(address indexed sponsor, bytes12 indexed lockTag, address emissary)"}),": Emitted when a sponsor assigns or changes an emissary via ",e.jsx(s.code,{children:"assignEmissary"}),"."]}),`
`]}),`
`,e.jsxs(s.p,{children:["Standard ",e.jsx(s.code,{children:"ERC6909.Transfer"})," events are also emitted for mints, burns, and transfers of resource lock tokens."]}),`
`,e.jsxs(s.h2,{id:"key-data-structures",children:["Key Data Structures",e.jsx(s.a,{"aria-hidden":"true",tabIndex:"-1",href:"#key-data-structures",children:e.jsx(s.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(s.p,{children:"Many functions in The Compact use custom structs for their calldata. Here are some of the most important ones:"}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[`
`,e.jsxs(s.strong,{children:["For Claims (passed to ",e.jsx(s.code,{children:"ITheCompactClaims"})," functions):"]}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"Claim"}),": For claims involving a single resource lock on a single chain.",`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(s.code,{children:[e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Defined in src/types/Claims.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" Claim"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    bytes"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" allocatorData;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    bytes"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" sponsorSignature;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    address"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" sponsor;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" nonce;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" expires;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    bytes32"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" witness;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    string"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" witnessTypestring;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" id;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" allocatedAmount;"})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"    Component[] claimants;"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})})]})})}),`
`]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"BatchClaim"}),": For multiple resource locks on a single chain."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"MultichainClaim"}),": For single resource lock claims on the notarized (i.e., origin) chain of a multichain compact."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"ExogenousMultichainClaim"}),": For single resource lock claims on an exogenous chain (i.e., any chain ",e.jsx(s.em,{children:"other than"})," the notarized chain)."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"BatchMultichainClaim"}),": For multiple resource locks on the notarized chain."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"ExogenousBatchMultichainClaim"}),": For multiple resource locks on an exogenous chain."]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"BatchClaimComponent"}),": Used within batch claim structs.",`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(s.code,{children:[e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Defined in src/types/Components.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" BatchClaimComponent"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" id;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" allocatedAmount;"})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"    Component[] portions;"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})})]})})}),`
`]}),`
`]}),`
`]}),`
`,e.jsxs(s.li,{children:[`
`,e.jsxs(s.strong,{children:["For Allocated Transfers (passed to ",e.jsx(s.code,{children:"ITheCompact.allocatedTransfer"})," etc.):"]}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"AllocatedTransfer"}),": For transferring a single ID to multiple recipients with allocator approval.",`
`,e.jsx(e.Fragment,{children:e.jsx(s.pre,{className:"shiki shiki-themes github-light github-dark-dimmed",style:{backgroundColor:"#fff","--shiki-dark-bg":"#22272e",color:"#24292e","--shiki-dark":"#adbac7"},tabIndex:"0",children:e.jsxs(s.code,{children:[e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#6A737D","--shiki-dark":"#768390"},children:"// Defined in src/types/Claims.sol"})}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#D73A49","--shiki-dark":"#F47067"},children:"struct"}),e.jsx(s.span,{style:{color:"#6F42C1","--shiki-dark":"#F69D50"},children:" AllocatedTransfer"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" {"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    bytes"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" allocatorData;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" nonce;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" expires;"})]}),`
`,e.jsxs(s.span,{className:"line",children:[e.jsx(s.span,{style:{color:"#005CC5","--shiki-dark":"#6CB6FF"},children:"    uint256"}),e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:" id;"})]}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"    Component[] recipients;"})}),`
`,e.jsx(s.span,{className:"line",children:e.jsx(s.span,{style:{color:"#24292E","--shiki-dark":"#ADBAC7"},children:"}"})})]})})}),`
`]}),`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"AllocatedBatchTransfer"}),": For transferring multiple IDs."]}),`
`]}),`
`]}),`
`,e.jsxs(s.li,{children:[`
`,e.jsx(s.strong,{children:"For Deposits (used with Permit2):"}),`
`,e.jsxs(s.ul,{children:[`
`,e.jsxs(s.li,{children:[e.jsx(s.code,{children:"DepositDetails"}),": Helper for batch Permit2 deposits."]}),`
`]}),`
`]}),`
`]})]})}function l(i={}){const{wrapper:s}={...r(),...i.components};return s?e.jsx(s,{...i,children:e.jsx(n,{...i})}):n(i)}export{l as default,t as frontmatter};
